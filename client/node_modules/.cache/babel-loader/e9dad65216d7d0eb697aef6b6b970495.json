{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\vikra\\\\Desktop\\\\2020goals\\\\Web Devolepment\\\\React Front To Back\\\\Contact-keeper\\\\client\\\\src\\\\components\\\\contacts\\\\ContactForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport ContactContext from \"../../context/contact/contactContext\";\n\nconst ContactForm = () => {\n  _s();\n\n  const contactContext = useContext(ContactContext);\n  const {\n    addContact,\n    current\n  } = contactContext; //Runs when application mounts //this is when we are setting the form data from the context.\n\n  useEffect(() => {\n    if (current !== null) {\n      setContact(current);\n    } else {\n      setContact({\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        type: \"personal\"\n      });\n    }\n  }, [contactContext, current, clearCurrent]); //[] means this should run when contactContext or current is changed.\n\n  const [contact, setContact] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    type: \"personal\"\n  });\n  const {\n    name,\n    email,\n    phone,\n    type\n  } = contact;\n\n  const onChange = e => setContact({ ...contact,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    addContact(contact);\n    setContact({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      type: \"personal\"\n    });\n  };\n\n  const clearAll = () => {\n    clearCurrent();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-primary\",\n      children: current ? \"Edit Contact\" : \"Add Contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Name\",\n      name: \"name\",\n      value: name,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      name: \"email\",\n      value: email,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Phone\",\n      name: \"phone\",\n      value: phone,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Contact Type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"radio\",\n      name: \"type\",\n      value: \"personal\",\n      checked: type == \"personal\",\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), \"Personal\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"radio\",\n      name: \"type\",\n      value: \"professional\",\n      checked: type === \"professional\",\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), \"professional\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: current ? \"Update Cotact\" : \"Add Contact\",\n        className: \"btn btn-primary btn-block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), current && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onClick: clearAll,\n          className: \"btn btn-light btn-block\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactForm, \"4OozrWWoaHfrD0VlzgeypQSvaHI=\");\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["C:/Users/vikra/Desktop/2020goals/Web Devolepment/React Front To Back/Contact-keeper/client/src/components/contacts/ContactForm.js"],"names":["React","useState","useContext","useEffect","ContactContext","ContactForm","contactContext","addContact","current","setContact","name","email","phone","type","clearCurrent","contact","onChange","e","target","value","onSubmit","preventDefault","clearAll"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport ContactContext from \"../../context/contact/contactContext\";\r\nconst ContactForm = () => {\r\n  const contactContext = useContext(ContactContext);\r\n  const { addContact, current } = contactContext;\r\n  //Runs when application mounts //this is when we are setting the form data from the context.\r\n  useEffect(() => {\r\n    if (current !== null) {\r\n      setContact(current);\r\n    } else {\r\n      setContact({\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        type: \"personal\",\r\n      });\r\n    }\r\n  }, [contactContext, current, clearCurrent]); //[] means this should run when contactContext or current is changed.\r\n\r\n  const [contact, setContact] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    type: \"personal\",\r\n  });\r\n\r\n  const { name, email, phone, type } = contact;\r\n  const onChange = (e) =>\r\n    setContact({ ...contact, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    addContact(contact);\r\n    setContact({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      type: \"personal\",\r\n    });\r\n  };\r\n\r\n  const clearAll = () => {\r\n    clearCurrent();\r\n  };\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <h2 className=\"text-primary\">\r\n        {current ? \"Edit Contact\" : \"Add Contact\"}\r\n      </h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Name\"\r\n        name=\"name\"\r\n        value={name}\r\n        onChange={onChange}\r\n      />\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Email\"\r\n        name=\"email\"\r\n        value={email}\r\n        onChange={onChange}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Phone\"\r\n        name=\"phone\"\r\n        value={phone}\r\n        onChange={onChange}\r\n      />\r\n      {/* Radio Button */}\r\n      <h5>Contact Type</h5>\r\n      <input\r\n        type=\"radio\"\r\n        name=\"type\"\r\n        value=\"personal\"\r\n        checked={type == \"personal\"}\r\n        onChange={onChange}\r\n      />\r\n      Personal{\" \"}\r\n      <input\r\n        type=\"radio\"\r\n        name=\"type\"\r\n        value=\"professional\"\r\n        checked={type === \"professional\"}\r\n        onChange={onChange}\r\n      />\r\n      professional\r\n      <div>\r\n        <input\r\n          type=\"submit\"\r\n          value={current ? \"Update Cotact\" : \"Add Contact\"}\r\n          className=\"btn btn-primary btn-block\"\r\n        />\r\n\r\n        {current && (\r\n          <div>\r\n            <input onClick={clearAll} className=\"btn btn-light btn-block\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n"]},"metadata":{},"sourceType":"module"}