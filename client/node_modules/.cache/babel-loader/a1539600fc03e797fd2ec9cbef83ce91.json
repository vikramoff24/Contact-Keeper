{"ast":null,"code":"import { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR } from \"../types\"; //exporting directly the function.\n\nexport default ((state, action) => {\n  switch (action.type) {\n    case ADD_CONTACT:\n      return { ...state,\n        contacts: [...state.contacts, action.payload] //as it is array of objects.\n\n      };\n\n    case UPDATE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact)\n      };\n\n    case DELETE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.filter(contact => contact.id !== action.payload //it returns the object which returns true\n        ) //checks into each object and filter according to condition\n\n      };\n\n    case FILTER_CONTACTS:\n      return { ...state,\n        filtered: state.contacts.filter(contact => {\n          const regex = new RegExp(`${action.payload}`, \"gi\");\n          return contact.name.match(regex) || contact.email.match(regex); //the Object which returns true.\n        })\n      };\n\n    case CLEAR_FILTER:\n      return { ...state,\n        filtered: null\n      };\n\n    case SET_CURRENT:\n      return { ...state,\n        current: action.payload\n      };\n\n    case CLEAR_CURRENT:\n      return { ...state,\n        current: null\n      };\n\n    case CONTACT_ERROR:\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/vikra/Desktop/2020goals/Web Devolepment/React Front To Back/Contact-keeper/client/src/context/contact/contactReducer.js"],"names":["ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","state","action","type","contacts","payload","map","contact","id","filter","filtered","regex","RegExp","name","match","email","current","error"],"mappings":"AAAA,SACEA,WADF,EAEEC,cAFF,EAGEC,WAHF,EAIEC,aAJF,EAKEC,cALF,EAMEC,eANF,EAOEC,YAPF,EAQEC,aARF,QASO,UATP,C,CAWA;;AACA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,WAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELG,QAAAA,QAAQ,EAAE,CAAC,GAAGH,KAAK,CAACG,QAAV,EAAoBF,MAAM,CAACG,OAA3B,CAFL,CAE0C;;AAF1C,OAAP;;AAKF,SAAKR,cAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeE,GAAf,CAAoBC,OAAD,IAC3BA,OAAO,CAACC,EAAR,KAAeN,MAAM,CAACG,OAAP,CAAeG,EAA9B,GAAmCN,MAAM,CAACG,OAA1C,GAAoDE,OAD5C;AAFL,OAAP;;AAMF,SAAKb,cAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeK,MAAf,CACPF,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeN,MAAM,CAACG,OAD3B,CACmC;AADnC,SAFL,CAIF;;AAJE,OAAP;;AAMF,SAAKP,eAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELS,QAAAA,QAAQ,EAAET,KAAK,CAACG,QAAN,CAAeK,MAAf,CAAuBF,OAAD,IAAa;AAC3C,gBAAMI,KAAK,GAAG,IAAIC,MAAJ,CAAY,GAAEV,MAAM,CAACG,OAAQ,EAA7B,EAAgC,IAAhC,CAAd;AACA,iBAAOE,OAAO,CAACM,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,KAA6BJ,OAAO,CAACQ,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAApC,CAF2C,CAEqB;AACjE,SAHS;AAFL,OAAP;;AAOF,SAAKZ,YAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELS,QAAAA,QAAQ,EAAE;AAFL,OAAP;;AAIF,SAAKf,WAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELe,QAAAA,OAAO,EAAEd,MAAM,CAACG;AAFX,OAAP;;AAKF,SAAKT,aAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELe,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKhB,aAAL;AACE,aAAO,EACL,GAAGC,KADE;AAELgB,QAAAA,KAAK,EAAEf,MAAM,CAACG;AAFT,OAAP;;AAIF;AACE,aAAOJ,KAAP;AAnDJ;AAqDD,CAtDD","sourcesContent":["import {\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACTS,\r\n  CLEAR_FILTER,\r\n  CONTACT_ERROR,\r\n} from \"../types\";\r\n\r\n//exporting directly the function.\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: [...state.contacts, action.payload], //as it is array of objects.\r\n      };\r\n\r\n    case UPDATE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact.id === action.payload.id ? action.payload : contact\r\n        ),\r\n      };\r\n    case DELETE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload //it returns the object which returns true\r\n        ), //checks into each object and filter according to condition\r\n      };\r\n    case FILTER_CONTACTS:\r\n      return {\r\n        ...state,\r\n        filtered: state.contacts.filter((contact) => {\r\n          const regex = new RegExp(`${action.payload}`, \"gi\");\r\n          return contact.name.match(regex) || contact.email.match(regex); //the Object which returns true.\r\n        }),\r\n      };\r\n    case CLEAR_FILTER:\r\n      return {\r\n        ...state,\r\n        filtered: null,\r\n      };\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: action.payload,\r\n      };\r\n\r\n    case CLEAR_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: null,\r\n      };\r\n    case CONTACT_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}