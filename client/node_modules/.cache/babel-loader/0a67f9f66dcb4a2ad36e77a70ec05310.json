{"ast":null,"code":"import _toConsumableArray from\"C:/Users/vikra/Desktop/2020goals/Web Devolepment/React Front To Back/Contact-keeper/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:/Users/vikra/Desktop/2020goals/Web Devolepment/React Front To Back/Contact-keeper/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{GET_CONTACTS,ADD_CONTACT,DELETE_CONTACT,SET_CURRENT,CLEAR_CURRENT,UPDATE_CONTACT,FILTER_CONTACTS,CLEAR_FILTER,CONTACT_ERROR,CLEAR_CONTACTS}from\"../types\";//exporting directly the function.++\nexport default(function(state,action){switch(action.type){case GET_CONTACTS:return _objectSpread(_objectSpread({},state),{},{contacts:action.payload,loading:false});case ADD_CONTACT:return _objectSpread(_objectSpread({},state),{},{contacts:[action.payload].concat(_toConsumableArray(state.contacts)),loading:false//as it is array of objects.\n});case UPDATE_CONTACT:return _objectSpread(_objectSpread({},state),{},{contacts:state.contacts.map(function(contact){return contact._id===action.payload._id?action.payload:contact;}),loading:false,current:null});case DELETE_CONTACT:return _objectSpread(_objectSpread({},state),{},{contacts:state.contacts.filter(function(contact){return contact._id!==action.payload;}//it returns the object which returns true\n),//checks into each object and filter according to condition\nloading:false});case CLEAR_CONTACTS:return _objectSpread(_objectSpread({},state),{},{contacts:null,filtered:null,error:null,current:null});case FILTER_CONTACTS:return _objectSpread(_objectSpread({},state),{},{filtered:state.contacts.filter(function(contact){var regex=new RegExp(\"\".concat(action.payload),\"gi\");return contact.name.match(regex)||contact.email.match(regex);//the Object which returns true.\n})});case CLEAR_FILTER:return _objectSpread(_objectSpread({},state),{},{filtered:null});case SET_CURRENT:return _objectSpread(_objectSpread({},state),{},{current:action.payload});case CLEAR_CURRENT:return _objectSpread(_objectSpread({},state),{},{current:null});case CONTACT_ERROR:return _objectSpread(_objectSpread({},state),{},{error:action.payload});default:return state;}});","map":{"version":3,"sources":["C:/Users/vikra/Desktop/2020goals/Web Devolepment/React Front To Back/Contact-keeper/client/src/context/contact/contactReducer.js"],"names":["GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","CLEAR_CONTACTS","state","action","type","contacts","payload","loading","map","contact","_id","current","filter","filtered","error","regex","RegExp","name","match","email"],"mappings":"iWAAA,OACEA,YADF,CAEEC,WAFF,CAGEC,cAHF,CAIEC,WAJF,CAKEC,aALF,CAMEC,cANF,CAOEC,eAPF,CAQEC,YARF,CASEC,aATF,CAUEC,cAVF,KAWO,UAXP,CAaA;AACA,eAAe,SAACC,KAAD,CAAQC,MAAR,CAAmB,CAChC,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKZ,CAAAA,YAAL,CACE,sCACKU,KADL,MAEEG,QAAQ,CAAEF,MAAM,CAACG,OAFnB,CAGEC,OAAO,CAAE,KAHX,GAKF,IAAKd,CAAAA,WAAL,CACE,sCACKS,KADL,MAEEG,QAAQ,EAAGF,MAAM,CAACG,OAAV,4BAAsBJ,KAAK,CAACG,QAA5B,EAFV,CAGEE,OAAO,CAAE,KAAO;AAHlB,GAMF,IAAKV,CAAAA,cAAL,CACE,sCACKK,KADL,MAEEG,QAAQ,CAAEH,KAAK,CAACG,QAAN,CAAeG,GAAf,CAAmB,SAACC,OAAD,QAC3BA,CAAAA,OAAO,CAACC,GAAR,GAAgBP,MAAM,CAACG,OAAP,CAAeI,GAA/B,CAAqCP,MAAM,CAACG,OAA5C,CAAsDG,OAD3B,EAAnB,CAFZ,CAKEF,OAAO,CAAE,KALX,CAMEI,OAAO,CAAE,IANX,GAQF,IAAKjB,CAAAA,cAAL,CACE,sCACKQ,KADL,MAEEG,QAAQ,CAAEH,KAAK,CAACG,QAAN,CAAeO,MAAf,CACR,SAACH,OAAD,QAAaA,CAAAA,OAAO,CAACC,GAAR,GAAgBP,MAAM,CAACG,OAApC,EAA4C;AADpC,CAFZ,CAIK;AACHC,OAAO,CAAE,KALX,GAQF,IAAKN,CAAAA,cAAL,CACE,sCACKC,KADL,MAEEG,QAAQ,CAAE,IAFZ,CAGEQ,QAAQ,CAAE,IAHZ,CAIEC,KAAK,CAAE,IAJT,CAKEH,OAAO,CAAE,IALX,GAOF,IAAKb,CAAAA,eAAL,CACE,sCACKI,KADL,MAEEW,QAAQ,CAAEX,KAAK,CAACG,QAAN,CAAeO,MAAf,CAAsB,SAACH,OAAD,CAAa,CAC3C,GAAMM,CAAAA,KAAK,CAAG,GAAIC,CAAAA,MAAJ,WAAcb,MAAM,CAACG,OAArB,EAAgC,IAAhC,CAAd,CACA,MAAOG,CAAAA,OAAO,CAACQ,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,GAA6BN,OAAO,CAACU,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAApC,CAAgE;AACjE,CAHS,CAFZ,GAOF,IAAKhB,CAAAA,YAAL,CACE,sCACKG,KADL,MAEEW,QAAQ,CAAE,IAFZ,GAIF,IAAKlB,CAAAA,WAAL,CACE,sCACKO,KADL,MAEES,OAAO,CAAER,MAAM,CAACG,OAFlB,GAKF,IAAKV,CAAAA,aAAL,CACE,sCACKM,KADL,MAEES,OAAO,CAAE,IAFX,GAIF,IAAKX,CAAAA,aAAL,CACE,sCACKE,KADL,MAEEY,KAAK,CAAEX,MAAM,CAACG,OAFhB,GAIF,QACE,MAAOJ,CAAAA,KAAP,CAtEJ,CAwED,CAzED","sourcesContent":["import {\r\n  GET_CONTACTS,\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACTS,\r\n  CLEAR_FILTER,\r\n  CONTACT_ERROR,\r\n  CLEAR_CONTACTS,\r\n} from \"../types\";\r\n\r\n//exporting directly the function.++\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case GET_CONTACTS:\r\n      return {\r\n        ...state,\r\n        contacts: action.payload,\r\n        loading: false,\r\n      };\r\n    case ADD_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts],\r\n        loading: false, //as it is array of objects.\r\n      };\r\n\r\n    case UPDATE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact._id === action.payload._id ? action.payload : contact\r\n        ),\r\n        loading: false,\r\n        current: null,\r\n      };\r\n    case DELETE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact._id !== action.payload //it returns the object which returns true\r\n        ), //checks into each object and filter according to condition\r\n        loading: false,\r\n      };\r\n\r\n    case CLEAR_CONTACTS:\r\n      return {\r\n        ...state,\r\n        contacts: null,\r\n        filtered: null,\r\n        error: null,\r\n        current: null,\r\n      };\r\n    case FILTER_CONTACTS:\r\n      return {\r\n        ...state,\r\n        filtered: state.contacts.filter((contact) => {\r\n          const regex = new RegExp(`${action.payload}`, \"gi\");\r\n          return contact.name.match(regex) || contact.email.match(regex); //the Object which returns true.\r\n        }),\r\n      };\r\n    case CLEAR_FILTER:\r\n      return {\r\n        ...state,\r\n        filtered: null,\r\n      };\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: action.payload,\r\n      };\r\n\r\n    case CLEAR_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: null,\r\n      };\r\n    case CONTACT_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}