{"ast":null,"code":"import _defineProperty from\"C:/Users/vikra/Desktop/2020goals/Web Devolepment/React Front To Back/Contact-keeper/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:/Users/vikra/Desktop/2020goals/Web Devolepment/React Front To Back/Contact-keeper/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/vikra/Desktop/2020goals/Web Devolepment/React Front To Back/Contact-keeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useState,useContext,useEffect}from\"react\";import ContactContext from\"../../context/contact/contactContext\";var ContactForm=function ContactForm(){var contactContext=useContext(ContactContext);var addContact=contactContext.addContact,current=contactContext.current,clearCurrent=contactContext.clearCurrent,updateContact=contactContext.updateContact;//Runs when application mounts //this is when we are setting the form data from the context.\nuseEffect(function(){if(current!==null){setContact(current);}else{setContact({name:\"\",email:\"\",phone:\"\",type:\"personal\"});}},[contactContext,current]);//[] means this should run when contactContext or current is changed.\nvar _useState=useState({name:\"\",email:\"\",phone:\"\",type:\"personal\"}),_useState2=_slicedToArray(_useState,2),contact=_useState2[0],setContact=_useState2[1];var name=contact.name,email=contact.email,phone=contact.phone,type=contact.type;var onChange=function onChange(e){return setContact(_objectSpread(_objectSpread({},contact),{},_defineProperty({},e.target.name,e.target.value)));};var onSubmit=function onSubmit(e){e.preventDefault();if(current===null){addContact(contact);}else{updateContact(contact);}setContact({name:\"\",email:\"\",phone:\"\",type:\"personal\"});};var clearAll=function clearAll(){clearCurrent();};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:onSubmit,children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-primary\",children:current?\"Edit Contact\":\"Add Contact\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Name\",name:\"name\",value:name,onChange:onChange}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email\",name:\"email\",value:email,onChange:onChange}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Phone\",name:\"phone\",value:phone,onChange:onChange}),/*#__PURE__*/_jsx(\"h5\",{children:\"Contact Type\"}),/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"type\",value:\"personal\",checked:type===\"personal\",onChange:onChange}),\"Personal\",\" \",/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"type\",value:\"professional\",checked:type===\"professional\",onChange:onChange}),\"professional\",/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:current?\"Update Contact\":\"Add Contact\",className:\"btn btn-primary btn-block\"}),current&&/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:clearAll,className:\"btn btn-light btn-block\",children:\"Clear\"})})]})]});};export default ContactForm;","map":{"version":3,"sources":["C:/Users/vikra/Desktop/2020goals/Web Devolepment/React Front To Back/Contact-keeper/client/src/components/contacts/ContactForm.js"],"names":["React","useState","useContext","useEffect","ContactContext","ContactForm","contactContext","addContact","current","clearCurrent","updateContact","setContact","name","email","phone","type","contact","onChange","e","target","value","onSubmit","preventDefault","clearAll"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport ContactContext from \"../../context/contact/contactContext\";\r\nconst ContactForm = () => {\r\n  const contactContext = useContext(ContactContext);\r\n  const { addContact, current, clearCurrent, updateContact } = contactContext;\r\n  //Runs when application mounts //this is when we are setting the form data from the context.\r\n  useEffect(() => {\r\n    if (current !== null) {\r\n      setContact(current);\r\n    } else {\r\n      setContact({\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        type: \"personal\",\r\n      });\r\n    }\r\n  }, [contactContext, current]); //[] means this should run when contactContext or current is changed.\r\n\r\n  const [contact, setContact] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    type: \"personal\",\r\n  });\r\n\r\n  const { name, email, phone, type } = contact;\r\n  const onChange = (e) =>\r\n    setContact({ ...contact, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (current === null) {\r\n      addContact(contact);\r\n    } else {\r\n      updateContact(contact);\r\n    }\r\n\r\n    setContact({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      type: \"personal\",\r\n    });\r\n  };\r\n\r\n  const clearAll = () => {\r\n    clearCurrent();\r\n  };\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <h2 className=\"text-primary\">\r\n        {current ? \"Edit Contact\" : \"Add Contact\"}\r\n      </h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Name\"\r\n        name=\"name\"\r\n        value={name}\r\n        onChange={onChange}\r\n      />\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Email\"\r\n        name=\"email\"\r\n        value={email}\r\n        onChange={onChange}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Phone\"\r\n        name=\"phone\"\r\n        value={phone}\r\n        onChange={onChange}\r\n      />\r\n      {/* Radio Button */}\r\n      <h5>Contact Type</h5>\r\n      <input\r\n        type=\"radio\"\r\n        name=\"type\"\r\n        value=\"personal\"\r\n        checked={type === \"personal\"}\r\n        onChange={onChange}\r\n      />\r\n      Personal{\" \"}\r\n      <input\r\n        type=\"radio\"\r\n        name=\"type\"\r\n        value=\"professional\"\r\n        checked={type === \"professional\"}\r\n        onChange={onChange}\r\n      />\r\n      professional\r\n      <div>\r\n        <input\r\n          type=\"submit\"\r\n          value={current ? \"Update Contact\" : \"Add Contact\"}\r\n          className=\"btn btn-primary btn-block\"\r\n        />\r\n\r\n        {current && (\r\n          <div>\r\n            <button onClick={clearAll} className=\"btn btn-light btn-block\">\r\n              Clear\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n"]},"metadata":{},"sourceType":"module"}