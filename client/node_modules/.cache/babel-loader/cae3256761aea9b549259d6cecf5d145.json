{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import React,{Fragment,useContext,useEffect}from\"react\";import{CSSTransition,TransitionGroup}from\"react-transition-group\";import ContactContext from\"../../context/contact/contactContext\";import ContactItems from\"./ContactItems\";import Spinner from\"../../components/layout/Spinner\";var Contacts=function Contacts(){var contactContext=useContext(ContactContext);var contacts=contactContext.contacts,filtered=contactContext.filtered,getContacts=contactContext.getContacts,loading=contactContext.loading;useEffect(function(){getContacts();//eslint-disable-next-line\n},[]);if(contacts!==null&&contacts.length===0&&!loading){return/*#__PURE__*/_jsx(\"h4\",{children:\"Please add a contact\"});}return/*#__PURE__*/_jsx(Fragment,{children:contacts!==null&&!loading?/*#__PURE__*/_jsx(Fragment,{children:filtered!==null?filtered.map(function(contact){return/*#__PURE__*/_jsx(ContactItems,{contact:contact},contact._id);}):/*#__PURE__*/_jsx(TransitionGroup,{children:contacts.map(function(contact){return/*#__PURE__*/_jsx(CSSTransition,{timeout:500,classNames:\"item\",children:/*#__PURE__*/_jsx(ContactItems,{contact:contact})},contact._id);})})}):/*#__PURE__*/_jsx(Spinner,{})});};export default Contacts;","map":{"version":3,"sources":["C:/Users/vikra/Desktop/2020goals/Web Devolepment/React Front To Back/Contact-keeper/client/src/components/contacts/Contacts.js"],"names":["React","Fragment","useContext","useEffect","CSSTransition","TransitionGroup","ContactContext","ContactItems","Spinner","Contacts","contactContext","contacts","filtered","getContacts","loading","length","map","contact","_id"],"mappings":"2CAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,CAAsCC,SAAtC,KAAuD,OAAvD,CACA,OAASC,aAAT,CAAwBC,eAAxB,KAA+C,wBAA/C,CACA,MAAOC,CAAAA,cAAP,KAA2B,sCAA3B,CAEA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,OAAP,KAAoB,iCAApB,CACA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB,GAAMC,CAAAA,cAAc,CAAGR,UAAU,CAACI,cAAD,CAAjC,CADqB,GAGbK,CAAAA,QAHa,CAGgCD,cAHhC,CAGbC,QAHa,CAGHC,QAHG,CAGgCF,cAHhC,CAGHE,QAHG,CAGOC,WAHP,CAGgCH,cAHhC,CAGOG,WAHP,CAGoBC,OAHpB,CAGgCJ,cAHhC,CAGoBI,OAHpB,CAKrBX,SAAS,CAAC,UAAM,CACdU,WAAW,GACX;AACD,CAHQ,CAGN,EAHM,CAAT,CAKA,GAAIF,QAAQ,GAAK,IAAb,EAAqBA,QAAQ,CAACI,MAAT,GAAoB,CAAzC,EAA8C,CAACD,OAAnD,CAA4D,CAC1D,mBAAO,4CAAP,CACD,CACD,mBACE,KAAC,QAAD,WACGH,QAAQ,GAAK,IAAb,EAAqB,CAACG,OAAtB,cACC,KAAC,QAAD,WACGF,QAAQ,GAAK,IAAb,CACCA,QAAQ,CAACI,GAAT,CAAa,SAACC,OAAD,qBACX,KAAC,YAAD,EAAgC,OAAO,CAAEA,OAAzC,EAAmBA,OAAO,CAACC,GAA3B,CADW,EAAb,CADD,cAKC,KAAC,eAAD,WACGP,QAAQ,CAACK,GAAT,CAAa,SAACC,OAAD,qBACZ,KAAC,aAAD,EAEE,OAAO,CAAE,GAFX,CAGE,UAAU,CAAC,MAHb,uBAKE,KAAC,YAAD,EAAc,OAAO,CAAEA,OAAvB,EALF,EACOA,OAAO,CAACC,GADf,CADY,EAAb,CADH,EANJ,EADD,cAqBC,KAAC,OAAD,IAtBJ,EADF,CA2BD,CAxCD,CA0CA,cAAeT,CAAAA,QAAf","sourcesContent":["import React, { Fragment, useContext, useEffect } from \"react\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport ContactContext from \"../../context/contact/contactContext\";\r\n\r\nimport ContactItems from \"./ContactItems\";\r\nimport Spinner from \"../../components/layout/Spinner\";\r\nconst Contacts = () => {\r\n  const contactContext = useContext(ContactContext);\r\n\r\n  const { contacts, filtered, getContacts, loading } = contactContext;\r\n\r\n  useEffect(() => {\r\n    getContacts();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (contacts !== null && contacts.length === 0 && !loading) {\r\n    return <h4>Please add a contact</h4>;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      {contacts !== null && !loading ? (\r\n        <Fragment>\r\n          {filtered !== null ? (\r\n            filtered.map((contact) => (\r\n              <ContactItems key={contact._id} contact={contact} />\r\n            ))\r\n          ) : (\r\n            <TransitionGroup>\r\n              {contacts.map((contact) => (\r\n                <CSSTransition\r\n                  key={contact._id}\r\n                  timeout={500}\r\n                  classNames=\"item\"\r\n                >\r\n                  <ContactItems contact={contact} />\r\n                </CSSTransition>\r\n              ))}\r\n            </TransitionGroup>\r\n          )}\r\n        </Fragment>\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n"]},"metadata":{},"sourceType":"module"}